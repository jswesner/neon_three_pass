table,fieldName,description,dataType,units,parserToCreate,entryValidationRulesParser,entryValidationRulesForm
fsh_fieldData,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
fsh_fieldData,locationID,"Identifier for location where sample was collected",string,NA,,"[NAMED_LOCATION_TYPE('AOS fish named location type' OR 'AOS riparian named location type')]","[REQUIRE][FROM_AOS_SPATIAL(IF(aquaticSiteType='lake'), AOS riparian point named location type)][FROM_AOS_SPATIAL(IF(aquaticSiteType='stream'), AOS fish named location type)]"
fsh_fieldData,aquaticSiteType,"Type of aquatic site, includes lake, river or stream",string,NA,,"[LOV][REQUIRE]","[REQUIRE][FROM_AOS_SITE_TYPE]"
fsh_fieldData,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE][DATE_FORMAT(YYYY-MM-DD)][LESS_THAN_OR_EQUAL_TO (now + 24)]"
fsh_fieldData,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[startDate] [CONVERT_TO_UTC(namedLocation)]",,
fsh_fieldData,reachID,"An identifier for the set of information associated with the reach",string,NA,,"[MATCH_REGULAR_EXPRESSION('^(?i)[A-Z]{4}.20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01]).[0-9]{2}$')]","[HIDDEN][SITE + '.' + startDate(YYYYMMDD) + '.' + namedLocation(##)]"
fsh_fieldData,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[LOV]"
fsh_fieldData,samplingImpractical,"Samples and/or measurements were not collected due to the indicated circumstance",string,NA,,"[LOV]","[LOV]"
fsh_fieldData,reachCondition,"An indication of the condition of the sampling reach",string,NA,,"[LOV][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]","[LOV][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]"
fsh_fieldData,measuredReachLength,"The length of the reach as measured by the technicians when the reach was established",real,meter,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (60)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (130)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL][IF (aquaticSiteType != 'stream'), REQUIRE_NULL]","[GREATER_THAN_OR_EQUAL_TO (60)][LESS_THAN_OR_EQUAL_TO (130)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL][IF (aquaticSiteType != 'stream'), REQUIRE_NULL]"
fsh_fieldData,fixedRandomReach,"An indication of whether the reach is fixed or random",string,NA,,"[LOV][REQUIRE]","[REQUIRE][LOV]"
fsh_fieldData,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
fsh_fieldData,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
fsh_fieldData,identifiedBy,"An identifier for the technician who identified the specimen",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY (previousValue)]"
fsh_fieldData,aCollectedBy,"Primary NEON technician username who collected the data",string,NA,,"[ASCII]","[REQUIRE][FROM_PERSONNEL][SUGGESTED_ENTRY (previousValue)]"
fsh_fieldData,bCollectedBy,"Secondary NEON technician username who collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY (previousValue)]"
fsh_fieldData,cCollectedBy,"Additional NEON technician username who collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY (previousValue)]"
fsh_fieldData,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh_fieldData,dataQF,"Data quality flag",string,NA,,"[ASCII]",
fsh_perPass,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
fsh_perPass,locationID,"Identifier for location where sample was collected",string,NA,,"[NAMED_LOCATION_TYPE('AOS fish named location type' OR 'AOS riparian named location type')]","Equals: fsh_fieldData_in.locationID"
fsh_perPass,passStartTime,"The start time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE][DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO (fsh_fieldData_in.startDate)][LESS_THAN_OR_EQUAL_TO (now + 24)]"
fsh_perPass,passEndTime,"The end time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE][DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO (passStartDate)][LESS_THAN_OR_EQUAL_TO (now + 24)]"
fsh_perPass,passNumber,"Number of the sampling pass within a reach",unsigned integer,number,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO (1)][LESS_THAN_OR_EQUAL_TO (5)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (1)][LESS_THAN_OR_EQUAL_TO (5)][IF (samplerType = 'fyke net'), 4][IF (samplerType = 'gill net'), 5][IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), LESS_THAN_OR_EQUAL_TO (3)]"
fsh_perPass,reachID,"An identifier for the set of information associated with the reach",string,NA,,"[MATCH_REGULAR_EXPRESSION('^(?i)[A-Z]{4}.20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01]).[0-9]{2}$')]","Equals: fsh_fieldData_in.reachID"
fsh_perPass,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[REQUIRE][MATCH_REGULAR_EXPRESSION('^(?i)[A-Z]{4}.20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01]).[0-9]{2}.[0-9].((?i)e-fisher|gill|fyke)$')]","[HIDDEN][SITE + '.' + startDate(YYYYMMDD) + '.' + namedLocation(##) + '.' + passNumber + '.' + shortSampleType (e-fisher/gill/fkye)]"
fsh_perPass,waterTemp,"Temperature of water (C)",real,celsius,,"[GREATER_THAN_OR_EQUAL_TO (10-)][LESS_THAN_OR_EQUAL_TO (40)]","[GREATER_THAN_OR_EQUAL_TO (10-)][LESS_THAN_OR_EQUAL_TO (40)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]"
fsh_perPass,dissolvedOxygen,"Dissolved Oxygen Concentration",real,milligramsPerLiter,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (50)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]","[GREATER_THAN_OR_EQUAL_TO (0)][LESS_THAN_OR_EQUAL_TO (50)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]"
fsh_perPass,specificConductance,"Conductivity auto-corrected to 25 degrees C",real,microsiemensPerCentimeter,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (7500)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]","[GREATER_THAN_OR_EQUAL_TO (0)][LESS_THAN_OR_EQUAL_TO (7500)][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]"
fsh_perPass,samplerType,"Type of sampler used to collect the sample",string,NA,,"[LOV][REQUIRE]","[LOV][REQUIRE][IF (aquaticSiteType = 'stream'), 'electrofisher' OR 'two electrofishers')][IF (aquaticSiteType = 'lake'), 'electrofisher' OR 'fkye net' OR 'gill net']"
fsh_perPass,habitatType,"Habitat type sampled",string,NA,,"[LOV][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]","[LOV][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL][IF (aquaticSiteType = 'lake' & samplerType != 'gill net'), DEFAULT_TO ('littoral')][IF (samplerType = 'gill net'), DEFAULT_TO ('pelagic')]"
fsh_perPass,subdominantHabitatType,"Subdominant habitat type sampled",string,NA,,"[LOV][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]","[LOV][IF (IS_NOT_BLANK(samplingImpractical)), REQUIRE_NULL]"
fsh_perPass,initialFrequency,"Frequency at the start of data collection",real,hertz,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (10)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (120)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), WARN][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (10)][LESS_THAN_OR_EQUAL_TO (120)]"
fsh_perPass,initialDutyCycle,"Duty cycle at the start of data collection",real,percent,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (5)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (80)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), WARN][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (5)][LESS_THAN_OR_EQUAL_TO (80)]"
fsh_perPass,initialVoltage,"Voltage at the start of data collection",real,volt,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (50)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (990)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), WARN][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (50)][LESS_THAN_OR_EQUAL_TO (990)]"
fsh_perPass,finalFrequency,"Frequency at the end of data collection",real,hertz,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (10)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (120)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), WARN][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (10)][LESS_THAN_OR_EQUAL_TO (120)]"
fsh_perPass,finalDutyCycle,"Duty cycle at the end of data collection",real,percent,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (5)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (80)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), WARN][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (5)][LESS_THAN_OR_EQUAL_TO (80)]"
fsh_perPass,finalVoltage,"Voltage at the end of data collection",real,volt,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (50)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (990)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), WARN][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (50)][LESS_THAN_OR_EQUAL_TO (990)]"
fsh_perPass,efTime,"Operational time of the electrofisher",real,second,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN(0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (10000)]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO (10000)]"
fsh_perPass,settingsChanged,"Number of times the settings changed",unsigned integer,number,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (6)]","[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (0)][LESS_THAN_OR_EQUAL_TO (6)]"
fsh_perPass,initialFrequency2,"Frequency at the start of data collection for the second electrofisher",real,hertz,,"[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (10)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (120)]","[IF (samplerType = 'two electrofishers'), WARN][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (10)][LESS_THAN_OR_EQUAL_TO (120)]"
fsh_perPass,initialDutyCycle2,"Duty cycle at the start of data collection for the second electrofisher",real,percent,,"[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (10)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (120)]","[IF (samplerType = 'two electrofishers'), WARN][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (5)][LESS_THAN_OR_EQUAL_TO (80)]"
fsh_perPass,initialVoltage2,"Voltage at the start of data collection for the second electrofisher",real,volt,,"[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (50)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (990)]","[IF (samplerType = 'two electrofishers'), WARN][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (50)][LESS_THAN_OR_EQUAL_TO (990)]"
fsh_perPass,finalFrequency2,"Frequency at the end of data collection for the second electrofisher",real,hertz,,"[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (10)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (120)]","[IF (samplerType = 'two electrofishers'), WARN][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (10)][LESS_THAN_OR_EQUAL_TO (120)]"
fsh_perPass,finalDutyCycle2,"Duty cycle at the end of data collection for the second electrofisher",real,percent,,"[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (5)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (80)]","[IF (samplerType = 'two electrofishers'), WARN][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (5)][LESS_THAN_OR_EQUAL_TO (80)]"
fsh_perPass,finalVoltage2,"Voltage at the end of data collection for the second electrofisher",real,volt,,"[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (50)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (990)]","[IF (samplerType = 'two electrofishers'), WARN][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (50)][LESS_THAN_OR_EQUAL_TO (990)]"
fsh_perPass,efTime2,"Operational time of the electrofisher for the second electrofisher",real,second,,"[IF (samplerType = 'two electrofishers'), REQUIRE][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN(0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (10000)]","[IF (samplerType = 'two electrofishers'), REQUIRE][IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO (10000)]"
fsh_perPass,settingsChanged2,"Number of times the settings changed for the second electrofisher",unsigned integer,number,,"[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (6)]","[IF (samplerType != 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (0)][LESS_THAN_OR_EQUAL_TO (6)]"
fsh_perPass,netIntegrity,"Indication of the integrity of the net",string,NA,,"[LOV][REQUIRE]","[LOV][REQUIRE]"
fsh_perPass,netSetTime,"Time the net was set",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE][IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE_NULL]","[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE][IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE_NULL][DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO (passStartDate)][LESS_THAN_OR_EQUAL_TO (now + 24)]"
fsh_perPass,netEndTime,"Time the net was pulled",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE][IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (netSetTime)]","[IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), REQUIRE][IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (netSetTime)][IF (samplerType = 'mini-fyke net'), LESS_THAN_OR_EQUAL_TO (netSetTime + 30)][HOURS][IF (samplerType = 'gill net'), LESS_THAN_OR_EQUAL_TO (netSetTime + 4)][HOURS][DATE_FORMAT(YYYY-MM-DDTHH:MM)]"
fsh_perPass,netDeploymentTime,"Total time of deployment of the net",real,hour,,"[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE_NULL]","[IF (samplerType = 'electrofisher' | samplerType = 'two electrofishers'), REQUIRE_NULL][IF (samplerType != 'electrofisher' & samplerType != 'two electrofishers'), netEndTime - netSetTime][HOURS]"
fsh_perPass,netLength,"Length of the net",real,meter,,"[IF (samplerType != 'mini-fyke net'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN (0.5)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (8)]","[IF (samplerType != 'mini-fyke net'), REQUIRE_NULL][GREATER_THAN (0.5)][LESS_THAN_OR_EQUAL_TO (8)]"
fsh_perPass,netDepth,"Deployment depth of the net",real,meter,,"[IF (samplerType != 'gill net'), REQUIRE_NULL][IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0.5)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (20)]","[IF (samplerType != 'gill net'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO (2)][LESS_THAN_OR_EQUAL_TO (10)]"
fsh_perPass,targetTaxaPresent,"Indicator of whether the sample contained individuals of the target taxa",string,NA,,"[LOV][IF(netIntegrity != '>10% compromised'), REQUIRE]","[LOV][IF(netIntegrity != '>10% compromised'), REQUIRE]"
fsh_perPass,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh_perPass,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
fsh_perPass,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
fsh_perPass,dataQF,"Data quality flag",string,NA,,"[ASCII]",
fsh_perPass,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
fsh_bulkCount,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
fsh_bulkCount,locationID,"Identifier for location where sample was collected",string,NA,,"[NAMED_LOCATION_TYPE('AOS fish named location type' OR 'AOS riparian named location type')]","Equals: fsh_fieldData_in.locationID"
fsh_bulkCount,passStartTime,"The start time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"Equals: fsh_perPass_in.passStartDate"
fsh_bulkCount,passEndTime,"The end time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"Equals: fsh_perPass_in.passEndDate"
fsh_bulkCount,passNumber,"Number of the sampling pass within a reach",unsigned integer,number,,,"Equals: fsh_perPass_in.passNumber"
fsh_bulkCount,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[REQUIRE][MATCH_REGULAR_EXPRESSION('^(?i)[A-Z]{4}.20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01]).[0-9]{2}.[0-9].((?i)e-fisher|gill|fyke)$')]","Equals: fsh_perPass_in.eventID"
fsh_bulkCount,taxonID,"Species code, based on one or more sources",string,NA,,"[ELEMENT_OF('FISH', 'taxonID', 'T')][REQUIRE]","[ELEMENT_OF('FISH', 'taxonID', 'T')][REQUIRE]"
fsh_bulkCount,morphospeciesID,"Identifier for morphospecies",string,NA,,"[ASCII]","[ASCII]"
fsh_bulkCount,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh_bulkCount,bulkFishCount,"The number of fish counted during bulk processing",unsigned integer,number,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)]","[GREATER_THAN_OR_EQUAL_TO (0)][IF (fsh_perPass_in.samplerType = 'electrofisher'), LESS_THAN_OR_EQUAL_TO (5000)][IF (fsh_perPass_in.samplerType = 'mini-fyke net'), LESS_THAN_OR_EQUAL_TO (50000)][IF (fsh_perPass_in.samplerType = 'gill net'), LESS_THAN_OR_EQUAL_TO (500)]"
fsh_bulkCount,actualOrEstimated,"Indication of whether the count is actual or estimated",string,NA,,"[LOV]","[LOV]"
fsh_bulkCount,bulkMortality,"The number of specimens found dead in bulk processing",unsigned integer,number,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)]","[GREATER_THAN_OR_EQUAL_TO (0)]"
fsh_bulkCount,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV]","[LOV]"
fsh_bulkCount,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[LOV]",
fsh_bulkCount,identifiedBy,"An identifier for the technician who identified the specimen",string,NA,,"[REQUIRE]","[REQUIRE]"
fsh_bulkCount,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh_bulkCount,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
fsh_bulkCount,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
fsh_bulkCount,dataQF,"Data quality flag",string,NA,,"[ASCII]",
fsh_bulkCount,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
fsh_morphospecies,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
fsh_morphospecies,siteID,"NEON site code",string,NA,,"[NAMED_LOCATION_TYPE('SITE')]","[REQUIRE][NAMED_LOCATION_TYPE('SITE')]"
fsh_morphospecies,aquaticSiteType,"Type of aquatic site, includes lake, river or stream",string,NA,,"[LOV]","[FROM_AOS_SITE_TYPE]"
fsh_morphospecies,morphospeciesCreatedDate,"Date and time of morphospecies record creation",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE][DATE_FORMAT(YYYY-MM-DD)][SUGGESTED_ENTRY (previousValue)][LESS_THAN_OR_EQUAL_TO (now + 24)]"
fsh_morphospecies,morphospeciesResolvedDate,"Date and time of resolving the morphospecies identification",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE][DATE_FORMAT(YYYY-MM-DD)][SUGGESTED_ENTRY (previousValue)][LESS_THAN_OR_EQUAL_TO (now + 24)]"
fsh_morphospecies,taxonID,"Species code, based on one or more sources",string,NA,,"[ELEMENT_OF('FISH', 'taxonID', 'T')]","[ELEMENT_OF('FISH', 'taxonID', 'T')]"
fsh_morphospecies,morphospeciesID,"Identifier for morphospecies",string,NA,,,"[ASCII][DOMAIN + '.' + YEAR + '.' morphospecies]"
fsh_morphospecies,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]",
fsh_morphospecies,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV]","[LOV]"
fsh_morphospecies,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[LOV]","[LOV]"
fsh_morphospecies,morphospeciesResolved,"Indicator of whether the morphospecies has been identified",string,NA,,"[LOV]","[LOV]"
fsh_morphospecies,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY (previousValue)]"
fsh_morphospecies,identifiedBy,"An identifier for the technician who identified the specimen",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY (previousValue)]"
fsh_morphospecies,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
fsh_morphospecies,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
fsh_morphospecies,dataQF,"Data quality flag",string,NA,,"[ASCII]",
fsh,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
fsh,locationID,"Identifier for location where sample was collected",string,NA,,"[NAMED_LOCATION_TYPE('AOS fish named location type' OR 'AOS riparian named location type')]","Equals: fsh_fieldData_in.locationID"
fsh,passStartTime,"The start time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"Equals: fsh_perPass_in.passStartDate"
fsh,passEndTime,"The end time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"Equals: fsh_perPass_in.passEndDate"
fsh,passNumber,"Number of the sampling pass within a reach",unsigned integer,number,,,"Equals: fsh_perPass_in.passNumber"
fsh,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[REQUIRE][MATCH_REGULAR_EXPRESSION('^(?i)[A-Z]{4}.20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01]).[0-9]{2}.[0-9].((?i)e-fisher|gill|fyke)$')]","Equals: fsh_perPass_in.eventID"
fsh,voucherSampleID,"Unique identifier for the voucher sample",string,NA,,"[DOES_NOT_EXIST]",
fsh,voucherSampleFate,"Fate of a voucher sample",string,NA,"[DEFAULT_TO('active')]",,
fsh,voucherSampleCode,"Barcode of a voucher sample",string,NA,,,
fsh,scientificName,"Scientific name, associated with the taxonID. This is the name of the lowest level taxonomic rank that can be determined",string,NA,,"[ELEMENT_OF('MACROINVERTEBRATE','taxonID','T')]",
fsh,morphospeciesID,"Identifier for morphospecies",string,NA,,"[ASCII]","[ASCII]"
fsh,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh,bulkInvertCount,"The number of macroinvertebrates per scientificName counted during fish processing",unsigned integer,number,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)]","[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)]"
fsh,bulkMortality,"The number of specimens found dead in bulk processing",unsigned integer,number,,"[IF (IS_NOT_BLANK), GREATER_THAN_OR_EQUAL_TO (0)]","[GREATER_THAN_OR_EQUAL_TO (0)]"
fsh,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV]","[LOV]"
fsh,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[LOV]",
fsh,identifiedBy,"An identifier for the technician who identified the specimen",string,NA,,"[REQUIRE]","[REQUIRE]"
fsh,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
fsh,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
fsh,dataQF,"Data quality flag",string,NA,,"[ASCII]",
fsh,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
fsh_perFish,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
fsh_perFish,locationID,"Identifier for location where sample was collected",string,NA,,"[NAMED_LOCATION_TYPE('AOS fish named location type' OR 'AOS riparian named location type')]","Equals: fsh_fieldData_in.locationID"
fsh_perFish,passStartTime,"The start time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"Equals: fsh_perPass_in.passStartDate"
fsh_perFish,passEndTime,"The end time of the pass",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"Equals: fsh_perPass_in.passEndDate"
fsh_perFish,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[REQUIRE][MATCH_REGULAR_EXPRESSION('^(?i)[A-Z]{4}.20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01]).[0-9]{2}.[0-9].((?i)e-fisher|gill|fyke)$')]","Equals: fsh_perPass_in.eventID"
fsh_perFish,passNumber,"Number of the sampling pass within a reach",unsigned integer,number,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO (1)][LESS_THAN_OR_EQUAL_TO (5)]","Equals: fsh_perPass_in.passNumber"
fsh_perFish,specimenNumber,"Number of the specimen",unsigned integer,number,,,"[SUGGESTED_ENTRY (previousValue + 1)]"
fsh_perFish,taxonID,"Species code, based on one or more sources",string,NA,,"[ELEMENT_OF('FISH', 'taxonID', 'T')][REQUIRE]","[ELEMENT_OF('FISH', 'taxonID', 'T')][REQUIRE]"
fsh_perFish,morphospeciesID,"Identifier for morphospecies",string,NA,,"[ASCII]","[ASCII]"
fsh_perFish,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh_perFish,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV]","[LOV]"
fsh_perFish,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[LOV]","[LOV]"
fsh_perFish,fishTotalLength,"Length of the specimen",real,millimeter,,"[IF (IS_NOT_BLANK), GREATER_THAN(0)][IF (IS_NOT_BLANK), LESS_THAN_OR_EQUAL_TO (1000)]","[GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO (1000)]"
fsh_perFish,fishWeight,"Live weight as measured in the field",real,gram,,"[IF < 0.25, FAIL][IF > 0.25 & < 0.5, FAIL][IF > 5000, FAIL]","[GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO (5000)]"
fsh_perFish,delt,"Indication of any deformities, eroded fins, lesions/parasites, tumors",string,NA,,"[LOV]","[LOV]"
fsh_perFish,efMortality,"Indication of mortality from the electrofishing equipment",string,NA,,"[LOV]","[LOV]"
fsh_perFish,efInjury,"Indication of injury from the electrofishing equipment (burn marks, bent spine, hemorrhage)",string,NA,,"[LOV]","[LOV]"
fsh_perFish,fishLifeStage,"Indication of the life stage of the fish",string,NA,,"[LOV]","[LOV][WARN]"
fsh_perFish,sampleTypeCollected,"Type of sample collected",string,NA,,"[LOV][REQUIRE]","[LOV][REQUIRE]"
fsh_perFish,voucherSampleID,"Unique identifier for the voucher sample",string,NA,,"[DOES_NOT_EXIST]","[IF(sampleTypeCollected != 'no sample'),REQUIRE][IF(sampleTypeCollected = 'no sample'), REQUIRE_NULL]['FSH' + '.' + SITE + '.' + namedLocation(##) + '.' + startDate(YYYYMMDD) + '.' + passNumber + '.' + specimenNumber]"
fsh_perFish,voucherSampleFate,"Fate of a voucher sample",string,NA,,"[LOV]","[LOV]"
fsh_perFish,voucherSampleCode,"Barcode of a voucher sample",string,NA,,,"[HIDDEN]"
fsh_perFish,dnaSampleID,"Identifier for DNA sample",string,NA,,"[DOES_NOT_EXIST]","[IF(sampleTypeCollected = 'dna' | sampleTypeCollected = 'both'),REQUIRE][IF(sampleTypeCollected != 'dna' & sampleTypeCollected != 'both'), REQUIRE_NULL]['FSH' + '.' + SITE + '.' + namedLocation(##) + '.' + startDate(YYYYMMDD) + '.' + passNumber + '.' + specimenNumber + '.' + 'dna']"
fsh_perFish,dnaSampleFate,"Fate of a DNA sample",string,NA,,,"[HIDDEN][IF (IS_NOT_BLANK(dnaSampleID), DEFAULT_TO ('active')]"
fsh_perFish,dnaSampleCode,"Barcode of a DNA sample",string,NA,,,"[HIDDEN]"
fsh_perFish,identifiedBy,"An identifier for the technician who identified the specimen",string,NA,,"[REQUIRE]","[REQUIRE]"
fsh_perFish,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
fsh_perFish,samplerType,"Type of sampler used to collect the sample",string,NA,,"[LOV]","Equals: fsh_perPass_in.samplerType"
fsh_perFish,netDepth,"Deployment depth of the net",real,meter,,,"Equals: fsh_perPass_in.netDepth"
fsh_perFish,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
fsh_perFish,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
fsh_perFish,dataQF,"Data quality flag",string,NA,,"[ASCII]",
fsh_perFish,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
